from telegram import Update
from telegram.ext import Application, CommandHandler, ContextTypes
import random
import requests

TOKEN = "YOUR_TELEGRAM_BOT_TOKEN"  # <-- –≤—Å—Ç–∞–≤—å —Å—é–¥–∞ —Ç–æ–∫–µ–Ω

# –°–æ–≤–µ—Ç—ã –ø–æ —ç–∫–æ–ª–æ–≥–∏–∏
ECO_TIPS = [
    "üö¥‚Äç‚ôÇÔ∏è –ò—Å–ø–æ–ª—å–∑—É–π –≤–µ–ª–æ—Å–∏–ø–µ–¥ –≤–º–µ—Å—Ç–æ –º–∞—à–∏–Ω—ã, –∫–æ–≥–¥–∞ —ç—Ç–æ –≤–æ–∑–º–æ–∂–Ω–æ.",
    "üí° –í—ã–∫–ª—é—á–∞–π —Å–≤–µ—Ç, –≤—ã—Ö–æ–¥—è –∏–∑ –∫–æ–º–Ω–∞—Ç—ã.",
    "‚ôªÔ∏è –°–æ—Ä—Ç–∏—Ä—É–π –æ—Ç—Ö–æ–¥—ã –¥–æ–º–∞.",
    "üõç –ò—Å–ø–æ–ª—å–∑—É–π –º–Ω–æ–≥–æ—Ä–∞–∑–æ–≤—ã–µ —Å—É–º–∫–∏ –¥–ª—è –ø–æ–∫—É–ø–æ–∫.",
    "üåø –ü–æ–∫—É–ø–∞–π –ª–æ–∫–∞–ª—å–Ω—ã–µ –ø—Ä–æ–¥—É–∫—Ç—ã, —á—Ç–æ–±—ã —Å–æ–∫—Ä–∞—Ç–∏—Ç—å —É–≥–ª–µ—Ä–æ–¥–Ω—ã–π —Å–ª–µ–¥.",
]

# –≠–∫–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–µ –∑–∞–¥–∞–Ω–∏—è
ECO_TASKS = [
    "–ù–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –ø–ª–∞—Å—Ç–∏–∫–æ–≤—ã–µ –ø–∞–∫–µ—Ç—ã —Ü–µ–ª—ã–π –¥–µ–Ω—å",
    "–°–æ–±—Ä–∞—Ç—å –±–∞—Ç–∞—Ä–µ–π–∫–∏ –∏ –æ—Ç–Ω–µ—Å—Ç–∏ –≤ –ø–µ—Ä–µ—Ä–∞–±–æ—Ç–∫—É",
    "–ù–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –æ–¥–Ω–æ—Ä–∞–∑–æ–≤—É—é –ø–æ—Å—É–¥—É —Å–µ–≥–æ–¥–Ω—è",
    "–ü–æ—Å–∞–¥–∏—Ç—å —Ä–∞—Å—Ç–µ–Ω–∏–µ –∏–ª–∏ –ø–æ–ª–∏—Ç—å –¥–æ–º–∞—à–Ω–∏–µ —Ü–≤–µ—Ç—ã",
]

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text(
        "–ü—Ä–∏–≤–µ—Ç üå±! –Ø —ç–∫–æ–±–æ—Ç. –í–æ—Ç —á—Ç–æ —è —É–º–µ—é:\n"
        "/news ‚Äì –≠–∫–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–µ –Ω–æ–≤–æ—Å—Ç–∏\n"
        "/tip ‚Äì –°–æ–≤–µ—Ç –ø–æ —ç–∫–æ–ª–æ–≥–∏–∏\n"
        "/eco_task ‚Äì –≠–∫–æ–∑–∞–¥–∞–Ω–∏–µ –Ω–∞ —Å–µ–≥–æ–¥–Ω—è\n"
        "/recycle <–≥–æ—Ä–æ–¥> ‚Äì –ù–∞–π–¥—É –ø—É–Ω–∫—Ç—ã –ø–µ—Ä–µ—Ä–∞–±–æ—Ç–∫–∏ –≤ –≥–æ—Ä–æ–¥–µ"
    )

async def tip(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text(random.choice(ECO_TIPS))

async def eco_task(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("üìù –¢–≤–æ–µ —ç–∫–æ–∑–∞–¥–∞–Ω–∏–µ:\n" + random.choice(ECO_TASKS))

async def news(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("üåç –ü–æ—Å–ª–µ–¥–Ω–∏–µ —ç–∫–æ-–Ω–æ–≤–æ—Å—Ç–∏ –º–æ–∂–Ω–æ –Ω–∞–π—Ç–∏ —Ç—É—Ç: https://ecoportal.su/news.php")

async def recycle(update: Update, context: ContextTypes.DEFAULT_TYPE):
    city = " ".join(context.args) if context.args else None
    if not city:
        await update.message.reply_text("‚ùó–£–∫–∞–∂–∏ –≥–æ—Ä–æ–¥: /recycle –ú–æ—Å–∫–≤–∞")
        return
    await update.message.reply_text(f"‚ôªÔ∏è –ü—É–Ω–∫—Ç—ã –ø–µ—Ä–µ—Ä–∞–±–æ—Ç–∫–∏ –≤ –≥–æ—Ä–æ–¥–µ {city}: –ø–æ–ø—Ä–æ–±—É–π –Ω–∞ –∫–∞—Ä—Ç–µ https://recyclemap.ru")

def main():
    app = Application.builder().token(TOKEN).build()

    app.add_handler(CommandHandler("start", start))
    app.add_handler(CommandHandler("tip", tip))
    app.add_handler(CommandHandler("eco_task", eco_task))
    app.add_handler(CommandHandler("news", news))
    app.add_handler(CommandHandler("recycle", recycle))

    print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω...")
    app.run_polling()

if __name__ == "__main__":
    main()
